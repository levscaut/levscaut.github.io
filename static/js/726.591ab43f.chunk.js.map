{"version":3,"file":"static/js/726.591ab43f.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","data/resume/degrees.js","data/resume/positions.js","data/resume/skills.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n    <p style={{float: \"right\"}}>GPA: {data.gpa}</p>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link} >{data.school}</a>, {data.year}</p>\n      \n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h2 style={{color:\"#FF5809\"}}>Education</h2>\n      <p></p><p></p>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n    <br /><br /><br />\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n    <div >\n    <h4 style={{float: \"right\"}}>{data.location}</h4>\n    <img src={data.icon} height={20} style={{float: \"left\", paddingRight: 5, verticalAlign: \"middle\", paddingTop: 5}}></img>\n    <h3><a href={data.link}>{data.company}</a></h3>\n    \n    </div>\n    <p className=\"daterange\" style={{float: \"right\"}}>{data.daterange}</p>\n      <h4>{data.position}</h4>\n      \n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n      <br /><br />\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    lab: PropTypes.string,\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h2 style={{color:\"#FF5809\"}}>Experience</h2>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    lab: PropTypes.string,\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({ data, categories }) => {\n  const { category, competency, title } = data;\n\n  // TODO: Consider averaging colors\n  const titleStyle = {\n    background: categories\n      .filter((cat) => category.includes(cat.name))\n      .map((cat) => cat.color)[0],\n  };\n\n  const barStyle = {\n    ...titleStyle,\n    width: `${String(Math.min(100, Math.max((competency / 5.0) * 100.0, 0)))}%`,\n  };\n\n  return (\n    <div className=\"skillbar clearfix\">\n      <div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>\n      <div className=\"skillbar-bar\" style={barStyle} />\n      <div className=\"skill-bar-percent\">{competency} / 5</div>\n    </div>\n  );\n};\n\nSkillBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkillBar.defaultProps = {\n  categories: [],\n};\n\nexport default SkillBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst handleProps = ({ categories, skills }) => ({\n  buttons: categories.map((cat) => cat.name).reduce((obj, key) => ({\n    ...obj,\n    [key]: false,\n  }), { All: true }),\n  skills,\n});\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = handleProps({ categories: props.categories, skills: props.skills });\n  }\n\n  getRows() {\n    // search for true active categories\n    const actCat = Object.keys(this.state.buttons).reduce((cat, key) => (\n      this.state.buttons[key] ? key : cat\n    ), 'All');\n\n    return this.state.skills.sort((a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    }).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\n      .map((skill) => (\n        <SkillBar\n          categories={this.props.categories}\n          data={skill}\n          key={skill.title}\n        />\n      ));\n  }\n\n  getButtons() {\n    return Object.keys(this.state.buttons).map((key) => (\n      <CategoryButton\n        label={key}\n        key={key}\n        active={this.state.buttons}\n        handleClick={this.handleChildClick}\n      />\n    ));\n  }\n\n  handleChildClick = (label) => {\n    this.setState((prevState) => {\n      // Toggle button that was clicked. Turn all other buttons off.\n      const buttons = Object.keys(prevState.buttons).reduce((obj, key) => ({\n        ...obj,\n        [key]: (label === key) && !prevState.buttons[key],\n      }), {});\n      // Turn on 'All' button if other buttons are off\n      buttons.All = !Object.keys(prevState.buttons).some((key) => buttons[key]);\n      return { buttons };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"skills\">\n        <div className=\"link-to\" id=\"skills\" />\n        <div className=\"title\">\n          <h2 style={{color:\"#FF5809\"}}>Skills</h2>\n          <p>Note: I think these sections are silly, but everyone seems to have one.\n            Here is a *mostly* honest overview of my skills.\n          </p>\n        </div>\n        <div className=\"skill-button-container\">\n          {this.getButtons()}\n        </div>\n        <div className=\"skill-row-container\">\n          {this.getRows()}\n        </div>\n      </div>\n    );\n  }\n}\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    competency: PropTypes.number,\n    category: PropTypes.arrayOf(PropTypes.string),\n  })),\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n","const degrees = [\n  {\n    school: 'Beijing University of Posts and Telecommunications',\n    pic: 'https://www.bupt.edu.cn/__local/C/8E/F7/EE902059AE32E0E6325EFEE8F46_B2D41D06_CD58.png',\n    degree: 'B.E. in Software Engineering',\n    gpa: '87/100',\n    link: 'https://scs.bupt.edu.cn/',\n    year: 'class of 2019',\n  },\n];\n\nexport default degrees;\n","const positions = [\r\n  {\r\n    company: 'Microsoft',\r\n    icon: 'https://www.microsoft.com/favicon.ico',\r\n    location: 'Beijing, China',\r\n    position: 'Software Engineering Intern',\r\n    link: 'https://azure.microsoft.com/zh-cn/products/machine-learning/',\r\n    daterange: 'Feb. 2023 – Aug. 2023',\r\n    points: [\r\n      'I’m currently a software engineering intern at Microsoft China in Azure big data group.',\r\n      'I’m developing autonomous machine learning platform using PySpark.'\r\n    ],\r\n  },\r\n  {\r\n    company: 'National University of Singapore',\r\n    location: 'Singapore',\r\n    icon: 'https://static.wixstatic.com/media/be90e0_d38d1474023f4f5db9e222ae075096ee~mv2.png/v1/fill/w_190,h_62,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/NExT%252B%252B_edited.png',\r\n    position: 'Research Assistant Intern',\r\n    link: 'https://www.nextcenter.org/',\r\n    daterange: 'Apr. 2022 – Present',\r\n    points: [\r\n      'I am currently an intern research assistant at the NExT++ Centre in National University of Singapore, supervised by Prof. Tat-Seng Chua.',\r\n      'My research projects focus on Temporal Knowledge Graph, in detail event forecasting, and complex event retrieval.\\nWe are currently preparing a conference manuscript to share our work.'],\r\n  },\r\n  {\r\n    company: 'Tsinghua University',\r\n    location: 'Beijing, China',\r\n    icon: 'https://www.tsinghua.edu.cn/favicon.ico',\r\n    position: 'Research Assistant Intern',\r\n    link: 'https://yongjinliu.github.io/',\r\n    daterange: 'Aug. 2021 – Apr. 2022',\r\n    points: [\r\n      'I did a research internship at the Institute of HCI and Media Integration in Tsinghua University supervised by Prof. Yongjin Liu.',\r\n      'There my research projects focused on multimodal sketch-based computer vision problems, including image retrieval, image generation, and text co-conditioned image generation.'],\r\n  },\r\n];\r\n\r\nexport default positions;\r\n","const skills = [\n  {\n    title: 'PyTorch',\n    competency: 4,\n    category: ['Machine Learning', 'Python'],\n  },\n  {\n    title: 'TensorFlow',\n    competency: 3,\n    category: ['Machine Learning', 'Python'],\n  },\n  {\n    title: 'Caffe',\n    competency: 1,\n    category: ['Machine Learning'],\n  },\n  {\n    title: 'Flask',\n    competency: 3,\n    category: ['Web Development', 'Python'],\n  },\n  {\n    title: 'Python',\n    competency: 5,\n    category: ['Programming Languages', 'Machine Learning'],\n  },\n  {\n    title: 'C++',\n    competency: 3,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'Java',\n    competency: 4,\n    category: ['Programming Languages', 'Java'],\n  },\n  {\n    title: 'C#',\n    competency: 2,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'Javascript',\n    competency: 2,\n    category: ['Web Development', 'Programming Languages', 'Javascript'],\n  },\n  {\n    title: 'React',\n    competency: 2,\n    category: ['Web Development', 'Javascript'],\n  },\n  {\n    title: 'Netty',\n    competency: 1,\n    category: ['Web Development', 'Java'],\n  },\n  {\n    title: 'MyBatis',\n    competency: 1,\n    category: ['Web Development', 'Java'],\n  },\n  {\n    title: 'JavaFX',\n    competency: 2,\n    category: ['Java'],\n  },\n  {\n    title: 'MySQL',\n    competency: 3,\n    category: ['Java', 'Web Development'],\n  },\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\n// this is a list of colors that I like. The length should be == to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#6968b3',\n  '#37b1f5',\n  '#40494e',\n  '#515dd4',\n  '#e47272',\n  '#cc7b94',\n  '#3896e2',\n  '#c3423f',\n  '#d75858',\n  '#747fff',\n  '#64cb7b',\n];\n\nconst categories = [\n  ...new Set(skills.reduce((acc, { category }) => acc.concat(category), [])),\n]\n  .sort()\n  .map((category, index) => ({\n    name: category,\n    color: colors[index],\n  }));\n\nexport { categories, skills };\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport { skills, categories } from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Research Experience',\n  'Skills',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <a style={{ textDecorationLine: null, float: 'right' }} href=\"resume.pdf\" download=\"resume.pdf\">\n            <FontAwesomeIcon icon={faFileDownload} size=\"2x\" />\n          </a>\n          <h2 data-testid=\"heading\">Resume</h2>\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      <Skills skills={skills} categories={categories} />\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["data","className","style","float","gpa","degree","href","link","school","year","Education","id","color","map","defaultProps","location","src","icon","height","paddingRight","verticalAlign","paddingTop","company","daterange","position","points","point","Experience","job","handleClick","active","label","type","onClick","SkillBar","categories","category","competency","title","titleStyle","background","filter","cat","includes","name","barStyle","width","String","Math","min","max","Skills","props","handleChildClick","setState","prevState","buttons","Object","keys","reduce","obj","key","All","some","state","skills","handleProps","actCat","this","sort","a","b","ret","skill","getButtons","getRows","Component","pic","colors","Set","acc","concat","index","Main","textDecorationLine","download","faFileDownload","size","degrees","positions"],"sourceRoot":""}