{"version":3,"file":"static/js/726.2c034b96.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","data/resume/degrees.js","data/resume/positions.js","data/resume/skills.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h4 className=\"degree\">{data.degree}</h4>\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\n    </header>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h2 style={{color:\"#FF5809\"}}>Education</h2>\n    </div>\n    {data.map((degree) => (\n      <Degree\n        data={degree}\n        key={degree.school}\n      />\n    ))}\n    <br /><br /><br />\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    school: PropTypes.string,\n    degree: PropTypes.string,\n    link: PropTypes.string,\n    year: PropTypes.number,\n  })),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <h3><a href={data.link}>{data.lab}</a></h3>\n      <h4>{data.company} - {data.position}</h4>\n      <p className=\"daterange\">{data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n      <br /><br />\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    lab: PropTypes.string,\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h2 style={{color:\"#FF5809\"}}>Experience</h2>\n    </div>\n    {data.map((job) => (\n      <Job\n        data={job}\n        key={job.company}\n      />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    lab: PropTypes.string,\n    company: PropTypes.string,\n    position: PropTypes.string,\n    link: PropTypes.string,\n    daterange: PropTypes.string,\n    points: PropTypes.arrayOf(PropTypes.string),\n  })),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CategoryButton = ({ handleClick, active, label }) => (\n  <button\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\n    type=\"button\"\n    onClick={() => handleClick(label)}\n  >\n    {label}\n  </button>\n);\n\nCategoryButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\n};\n\nexport default CategoryButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SkillBar = ({ data, categories }) => {\n  const { category, competency, title } = data;\n\n  // TODO: Consider averaging colors\n  const titleStyle = {\n    background: categories\n      .filter((cat) => category.includes(cat.name))\n      .map((cat) => cat.color)[0],\n  };\n\n  const barStyle = {\n    ...titleStyle,\n    width: `${String(Math.min(100, Math.max((competency / 5.0) * 100.0, 0)))}%`,\n  };\n\n  return (\n    <div className=\"skillbar clearfix\">\n      <div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>\n      <div className=\"skillbar-bar\" style={barStyle} />\n      <div className=\"skill-bar-percent\">{competency} / 5</div>\n    </div>\n  );\n};\n\nSkillBar.propTypes = {\n  data: PropTypes.shape({\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\n    competency: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkillBar.defaultProps = {\n  categories: [],\n};\n\nexport default SkillBar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport CategoryButton from './Skills/CategoryButton';\nimport SkillBar from './Skills/SkillBar';\n\nconst handleProps = ({ categories, skills }) => ({\n  buttons: categories.map((cat) => cat.name).reduce((obj, key) => ({\n    ...obj,\n    [key]: false,\n  }), { All: true }),\n  skills,\n});\n\nclass Skills extends Component {\n  constructor(props) {\n    super(props);\n    this.state = handleProps({ categories: props.categories, skills: props.skills });\n  }\n\n  getRows() {\n    // search for true active categories\n    const actCat = Object.keys(this.state.buttons).reduce((cat, key) => (\n      this.state.buttons[key] ? key : cat\n    ), 'All');\n\n    return this.state.skills.sort((a, b) => {\n      let ret = 0;\n      if (a.competency > b.competency) ret = -1;\n      else if (a.competency < b.competency) ret = 1;\n      else if (a.category[0] > b.category[0]) ret = -1;\n      else if (a.category[0] < b.category[0]) ret = 1;\n      else if (a.title > b.title) ret = 1;\n      else if (a.title < b.title) ret = -1;\n      return ret;\n    }).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\n      .map((skill) => (\n        <SkillBar\n          categories={this.props.categories}\n          data={skill}\n          key={skill.title}\n        />\n      ));\n  }\n\n  getButtons() {\n    return Object.keys(this.state.buttons).map((key) => (\n      <CategoryButton\n        label={key}\n        key={key}\n        active={this.state.buttons}\n        handleClick={this.handleChildClick}\n      />\n    ));\n  }\n\n  handleChildClick = (label) => {\n    this.setState((prevState) => {\n      // Toggle button that was clicked. Turn all other buttons off.\n      const buttons = Object.keys(prevState.buttons).reduce((obj, key) => ({\n        ...obj,\n        [key]: (label === key) && !prevState.buttons[key],\n      }), {});\n      // Turn on 'All' button if other buttons are off\n      buttons.All = !Object.keys(prevState.buttons).some((key) => buttons[key]);\n      return { buttons };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"skills\">\n        <div className=\"link-to\" id=\"skills\" />\n        <div className=\"title\">\n          <h2 style={{color:\"#FF5809\"}}>Skills</h2>\n          <p>Note: I think these sections are silly, but everyone seems to have one.\n            Here is a *mostly* honest overview of my skills.\n          </p>\n        </div>\n        <div className=\"skill-button-container\">\n          {this.getButtons()}\n        </div>\n        <div className=\"skill-row-container\">\n          {this.getRows()}\n        </div>\n      </div>\n    );\n  }\n}\n\nSkills.propTypes = {\n  skills: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    competency: PropTypes.number,\n    category: PropTypes.arrayOf(PropTypes.string),\n  })),\n  categories: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    color: PropTypes.string,\n  })),\n};\n\nSkills.defaultProps = {\n  skills: [],\n  categories: [],\n};\n\nexport default Skills;\n","const degrees = [\n  {\n    school: 'Beijing University of Posts and Telecommunications',\n    degree: 'B.E. Software Engineering',\n    link: 'https://scs.bupt.edu.cn/',\n    year: 2023,\n  },\n];\n\nexport default degrees;\n","const positions = [\r\n  {\r\n    lab: 'NExT++ Lab',\r\n    company: 'National University of Singapore',\r\n    position: 'Research Assistant Intern',\r\n    link: 'https://www.nextcenter.org/',\r\n    daterange: 'April 2022 – Present',\r\n    points: [\r\n      'I am currently an intern research assistant at the NExT++ Centre in National University of Singapore, supervised by Prof. Tat-Seng Chua.',\r\n      'My research projects focus on Temporal Knowledge Graph, in detail event forecasting, and complex event retrieval.\\nOur work is ready to submit to WWW 2023 Demo and preparing the long paper for submitting to more conferences.'],\r\n  },\r\n  {\r\n    lab: 'Institute of HCI and Media Integration',\r\n    company: 'Tsinghua University',\r\n    position: 'Research Assistant Intern',\r\n    link: 'https://yongjinliu.github.io/',\r\n    daterange: 'August 2021 – April 2022',\r\n    points: [\r\n      'I did a research internship at the Institute of HCI and Media Integration in Tsinghua University supervised by Prof. Yongjin Liu.',\r\n      'There my research projects focused on multimodal sketch-based computer vision problems, including image retrieval, image generation, and text co-conditioned image generation.'],\r\n  },\r\n];\r\n\r\nexport default positions;\r\n","const skills = [\n  {\n    title: 'PyTorch',\n    competency: 4,\n    category: ['Machine Learning', 'Python'],\n  },\n  {\n    title: 'TensorFlow',\n    competency: 3,\n    category: ['Machine Learning', 'Python'],\n  },\n  {\n    title: 'Caffe',\n    competency: 1,\n    category: ['Machine Learning'],\n  },\n  {\n    title: 'Flask',\n    competency: 3,\n    category: ['Web Development', 'Python'],\n  },\n  {\n    title: 'Python',\n    competency: 5,\n    category: ['Programming Languages', 'Machine Learning'],\n  },\n  {\n    title: 'C++',\n    competency: 3,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'Java',\n    competency: 4,\n    category: ['Programming Languages', 'Java'],\n  },\n  {\n    title: 'C#',\n    competency: 2,\n    category: ['Programming Languages'],\n  },\n  {\n    title: 'Javascript',\n    competency: 2,\n    category: ['Web Development', 'Programming Languages', 'Javascript'],\n  },\n  {\n    title: 'React',\n    competency: 2,\n    category: ['Web Development', 'Javascript'],\n  },\n  {\n    title: 'Netty',\n    competency: 1,\n    category: ['Web Development', 'Java'],\n  },\n  {\n    title: 'MyBatis',\n    competency: 1,\n    category: ['Web Development', 'Java'],\n  },\n  {\n    title: 'JavaFX',\n    competency: 2,\n    category: ['Java'],\n  },\n  {\n    title: 'MySQL',\n    competency: 3,\n    category: ['Java', 'Web Development'],\n  },\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\n\n// this is a list of colors that I like. The length should be == to the\n// number of categories. Re-arrange this list until you find a pattern you like.\nconst colors = [\n  '#6968b3',\n  '#37b1f5',\n  '#40494e',\n  '#515dd4',\n  '#e47272',\n  '#cc7b94',\n  '#3896e2',\n  '#c3423f',\n  '#d75858',\n  '#747fff',\n  '#64cb7b',\n];\n\nconst categories = [\n  ...new Set(skills.reduce((acc, { category }) => acc.concat(category), [])),\n]\n  .sort()\n  .map((category, index) => ({\n    name: category,\n    color: colors[index],\n  }));\n\nexport { categories, skills };\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Skills from '../components/Resume/Skills';\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport { skills, categories } from '../data/resume/skills';\n\nconst sections = [\n  'Education',\n  'Experience',\n  'Skills',\n];\n\nconst Resume = () => (\n  <Main\n    title=\"Resume\"\n  >\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <a style={{ textDecorationLine: null, float: 'right' }} href=\"resume.pdf\" download=\"resume.pdf\">\n            <FontAwesomeIcon icon={faFileDownload} size=\"2x\" />\n          </a>\n          <h2 data-testid=\"heading\">Resume</h2>\n        </div>\n      </header>\n      <Education data={degrees} />\n      <Experience data={positions} />\n      <Skills skills={skills} categories={categories} />\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["data","className","degree","href","link","school","year","Education","id","style","color","map","defaultProps","lab","company","position","daterange","points","point","Experience","job","handleClick","active","label","type","onClick","SkillBar","categories","category","competency","title","titleStyle","background","filter","cat","includes","name","barStyle","width","String","Math","min","max","Skills","props","handleChildClick","setState","prevState","buttons","Object","keys","reduce","obj","key","All","some","state","skills","handleProps","actCat","this","sort","a","b","ret","skill","getButtons","getRows","Component","colors","Set","acc","concat","index","Main","textDecorationLine","float","download","icon","faFileDownload","size","degrees","positions"],"sourceRoot":""}